{"version":3,"sources":["social-profile/Profile.module.css","statistics/Statistics.module.css","transaction-history/TransactionHistory.module.css","friend-list/Friends.module.css","components/Profile.js","components/Friends.js","friend-list/FriendsList.js","statistics/RandomColor.js","components/Stat.js","statistics/Statistics.js","components/Transaction.js","transaction-history/TransactionHistory.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Profiler","name","tag","location","avatar","stats","className","s","profile","description","src","alt","item","label","quantity","followers","views","likes","Friends","isOnline","typeClass","isOffline","width","FriendsList","friends","map","friend","id","RandomColor","Math","random","Stat","percentage","style","backgroundColor","StatisticalList","list","stat","Statistics","title","statistics","Transaction","type","amount","currency","row","TransactionHistory","items","transactionHistory","header","App","user","statisticalData","transactions","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.26b9efa0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__354hY\",\"avatar\":\"Profile_avatar__3yUPT\",\"description\":\"Profile_description__A0maH\",\"stats\":\"Profile_stats__27sRu\",\"item\":\"Profile_item__dWyb3\",\"name\":\"Profile_name__2N9If\",\"label\":\"Profile_label__1Hkhb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__2aOjS\",\"list\":\"Statistics_list__2nF1x\",\"label\":\"Statistics_label__2dk2I\",\"percentage\":\"Statistics_percentage__1KwG2\",\"title\":\"Statistics_title__89Dnn\",\"item\":\"Statistics_item__30wib\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"TransactionHistory_transactionHistory__zusVO\",\"header\":\"TransactionHistory_header__3A_Qz\",\"item\":\"TransactionHistory_item__3CR0J\",\"row\":\"TransactionHistory_row__1gV92\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Friends_item__2G6oU\",\"isOnline\":\"Friends_isOnline__3aeZ4\",\"isOffline\":\"Friends_isOffline__1X2qo\",\"avatar\":\"Friends_avatar__2gC8m\",\"name\":\"Friends_name__z8bqu\",\"info\":\"Friends_info__2DNez\"};","import s from '../social-profile/Profile.module.css';\nimport PropTypes from 'prop-types';\n\nexport default function Profiler({ name, tag, location, avatar, stats }) {\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt={name} className={s.avatar} />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li className={s.item}>\n          <span className={s.label}>Followers</span>\n          <span className={s.quantity}>{stats.followers}</span>\n        </li>\n        <li className={s.item}>\n          <span className={s.label}>Views</span>\n          <span className={s.quantity}>{stats.views}</span>\n        </li>\n        <li className={s.item}>\n          <span className={s.label}>Likes</span>\n          <span className={s.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\nProfiler.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  stats: PropTypes.object.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from '../friend-list/Friends.module.css';\n\nexport default function Friends({ avatar, name, isOnline }) {\n  const typeClass = isOnline ? s.isOnline : s.isOffline;\n  return (\n    <li className={s.item}>\n      <span className={typeClass}>{isOnline}</span>\n      <img className={s.avatar} src={avatar} alt=\"\" width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </li>\n  );\n}\nFriends.propTypes = {\n  avatar: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  isOnline: PropTypes.bool.isRequired,\n};\n","import Friends from '../components/Friends';\nimport PropTypes from 'prop-types';\n\nexport default function FriendsList({ friends }) {\n  return (\n    <ul>\n      {friends.map(friend => (\n        <Friends\n          key={friend.id}\n          isOnline={friend.isOnline}\n          avatar={friend.avatar}\n          name={friend.name}\n        />\n      ))}\n    </ul>\n  );\n}\nFriendsList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n    }),\n  ),\n};\n","const RandomColor = () => {\n  return 'hsla(' + Math.random() * 360 + ', 100%, 50%, 1)';\n};\n\nexport default RandomColor;\n","import s from '../statistics/Statistics.module.css';\nimport PropTypes from 'prop-types';\nimport RandomColor from '../statistics/RandomColor';\n\nexport default function Stat({ label, percentage }) {\n  return (\n    <li\n      className={s.item}\n      style={{\n        backgroundColor: `${RandomColor()}`,\n      }}\n    >\n      <span className={s.label}>{label}</span>\n      <span className={s.percentage}>{percentage}%</span>\n    </li>\n  );\n}\nStat.propTypes = {\n  label: PropTypes.string.isRequired,\n  percentage: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Stat from '../components/Stat';\n\nimport s from '../statistics/Statistics.module.css';\n\nconst StatisticalList = function ({ stats }) {\n  return (\n    <ul className={s.list}>\n      {stats.map(stat => (\n        <Stat key={stat.id} label={stat.label} percentage={stat.percentage} />\n      ))}\n    </ul>\n  );\n};\n\nStatistics.propTypes = {\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n\nexport default function Statistics({ title, stats }) {\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>{title}</h2>}\n\n      <StatisticalList stats={stats} />\n    </section>\n  );\n}\nStatistics.propTypes = {\n  title: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport s from '../transaction-history/TransactionHistory.module.css';\nexport default function Transaction({ type, amount, currency }) {\n  return (\n    <tr className={s.row}>\n      <td className={s.item}>{type}</td>\n      <td className={s.item}>{amount}</td>\n      <td className={s.item}>{currency}</td>\n    </tr>\n  );\n}\nTransaction.propTypes = {\n  type: PropTypes.string.isRequired,\n  amount: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport Transaction from '../components/Transaction';\nimport s from '../transaction-history/TransactionHistory.module.css';\n\nexport default function TransactionHistory({ items }) {\n  return (\n    <table className={s.transactionHistory}>\n      <thead>\n        <tr className={s.header}>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(item => (\n          <Transaction\n            key={item.id}\n            type={item.type}\n            amount={item.amount}\n            currency={item.currency}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n}\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import user from './social-profile/user.json';\nimport Profile from './components/Profile';\n\nimport friends from './friend-list/friends.json';\nimport FriendsList from './friend-list/FriendsList';\n\nimport statisticalData from './statistics/statistical-data.json';\nimport Statistics from './statistics/Statistics';\n\nimport transactions from './transaction-history/transactions.json';\nimport TransactionHistory from './transaction-history/TransactionHistory';\n\nfunction App() {\n  return (\n    <div>\n      <Profile\n        key={user.id}\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <FriendsList friends={friends} />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <TransactionHistory items={transactions} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}